// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SupportCenter.EmployeeManager.Data;

#nullable disable

namespace SupportCenter.EmployeeManager.Migrations
{
    [DbContext(typeof(EmployeeManagerDbContext))]
    [Migration("20230903191855_AddTimestamp")]
    partial class AddTimestamp
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SupportCenter.EmployeeManager.Data.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Finance"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Sales"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Marketing"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Human Resources"
                        },
                        new
                        {
                            Id = 5,
                            Name = "IT"
                        });
                });

            modelBuilder.Entity("SupportCenter.EmployeeManager.Data.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DepartmentID")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeveloper")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentID");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DepartmentID = 5,
                            FirstName = "Robert",
                            IsDeveloper = true,
                            LastName = "Heisler",
                            Title = "C# Developer"
                        },
                        new
                        {
                            Id = 2,
                            DepartmentID = 1,
                            FirstName = "Brad",
                            IsDeveloper = false,
                            LastName = "Sullivan",
                            Title = "Banker"
                        },
                        new
                        {
                            Id = 3,
                            DepartmentID = 3,
                            FirstName = "Silas ",
                            IsDeveloper = false,
                            LastName = "Rogers",
                            Title = "Sales Manager"
                        },
                        new
                        {
                            Id = 4,
                            DepartmentID = 2,
                            FirstName = "Vinny",
                            IsDeveloper = false,
                            LastName = "Beck",
                            Title = "Sales Rep"
                        },
                        new
                        {
                            Id = 5,
                            DepartmentID = 4,
                            FirstName = "Betsy ",
                            IsDeveloper = false,
                            LastName = "Mendoza",
                            Title = "Payroll"
                        },
                        new
                        {
                            Id = 6,
                            DepartmentID = 5,
                            FirstName = "Jason",
                            IsDeveloper = true,
                            LastName = "Rojas",
                            Title = "JavaScript Developer"
                        },
                        new
                        {
                            Id = 7,
                            DepartmentID = 2,
                            FirstName = "Marvin ",
                            IsDeveloper = false,
                            LastName = "Winter",
                            Title = "Sales Rep"
                        },
                        new
                        {
                            Id = 8,
                            DepartmentID = 4,
                            FirstName = "Yousuf ",
                            IsDeveloper = false,
                            LastName = "Grant",
                            Title = "Recruiting Manager"
                        });
                });

            modelBuilder.Entity("SupportCenter.EmployeeManager.Data.Models.Employee", b =>
                {
                    b.HasOne("SupportCenter.EmployeeManager.Data.Models.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("SupportCenter.EmployeeManager.Data.Models.Department", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
